{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name must be at least 4 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name cannot be Bob. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginForm = this.formBuilder.group({\n      email: ['diego@gmail.com', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      console.log(\"Llamar al servicio de login\");\n      this.router.navigateByUrl(\"/inicio\");\n      this.loginForm.reset();\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 4,\n  consts: [[3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementStart(5, \"div\");\n      i0.ɵɵtext(6, \" *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\" > \");\n      i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(15, \"Iniciar Sesion\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.name.errors == null ? null : ctx.name.errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name.errors == null ? null : ctx.name.errors[\"minlength\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name.errors == null ? null : ctx.name.errors[\"forbiddenName\"]);\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;ICOhDC,2BAAuC;IAAAA,iCAAiB;IAAAA,iBAAM;;;;;IAC9DA,2BAAwC;IACpCA,0DACJ;IAAAA,iBAAM;;;;;IACNA,2BAA4C;IACxCA,qCACJ;IAAAA,iBAAM;;;ADLd,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAa;IAA/C,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAJ5D,cAAS,GAAC,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC7BC,KAAK,EAAC,CAAC,iBAAiB,EAAC,CAACP,UAAU,CAACQ,QAAQ,EAACR,UAAU,CAACO,KAAK,CAAC,CAAC;MAChEE,QAAQ,EAAC,CAAC,EAAE,EAAC,CAACT,UAAU,CAACQ,QAAQ,CAAC;KACnC,CAAC;EACiE;EAErEE,KAAK;IACH,IAAG,IAAI,CAACC,SAAS,CAACC,KAAK,EAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,IAAI,CAACT,MAAM,CAACU,aAAa,CAAC,SAAS,CAAC;MACpC,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;KACvB,MACG;MACF,IAAI,CAACL,SAAS,CAACM,gBAAgB,EAAE;;EAErC;;AAhBWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BrB,+BAA+B;MAE0BA,qBAAK;MAAAA,iBAAQ;MAChEA,2BAAsH;MAEtHA,2BAAK;MAAEA,uGAGL;MAAAA,+DAA8D;MAC9DA,+DAEM;MACNA,+DAEM;MACRA,iBAAM;MAERA,+BAAkB;MACsCA,yBAAQ;MAAAA,iBAAQ;MACtEA,4BAAkG;MACpGA,iBAAM;MAENA,kCAAgE;MAA1CA;QAAA,OAASsB,WAAO;MAAA,EAAC;MAAyBtB,+BAAc;MAAAA,iBAAS;;;MAtBrFA,yCAAuB;MAQfA,eAA+B;MAA/BA,mFAA+B;MAC/BA,eAAgC;MAAhCA,oFAAgC;MAGhCA,eAAoC;MAApCA,wFAAoC","names":["Validators","i0","LoginComponent","constructor","formBuilder","router","group","email","required","password","login","loginForm","valid","console","log","navigateByUrl","reset","markAllAsTouched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm=this.formBuilder.group({\n      email:['diego@gmail.com',[Validators.required,Validators.email]],\n      password:['',[Validators.required]]\n    })\n  constructor(private formBuilder: FormBuilder, private router:Router){};\n\n  login(){\n    if(this.loginForm.valid){\n      console.log(\"Llamar al servicio de login\")\n      this.router.navigateByUrl(\"/inicio\");\n      this.loginForm.reset();\n    }\n    else{\n      this.loginForm.markAllAsTouched();\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" >\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n      <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n      \n      <div>  *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n        class=\"alert alert-danger\"\n        >\n        <div *ngIf=\"name.errors?.['required']\">Name is required.</div>\n        <div *ngIf=\"name.errors?.['minlength']\">\n            Name must be at least 4 characters long.\n        </div>\n        <div *ngIf=\"name.errors?.['forbiddenName']\">\n            Name cannot be Bob.\n        </div>\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n    </div>\n\n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Iniciar Sesion</button>\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}