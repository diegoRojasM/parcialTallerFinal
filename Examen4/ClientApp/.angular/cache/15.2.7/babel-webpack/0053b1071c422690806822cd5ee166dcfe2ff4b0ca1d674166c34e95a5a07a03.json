{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonasService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.apiURL = this.baseUrl + \"personas\";\n  }\n  // Método para obtener personas\n  getPersonas() {\n    return this.http.get(this.apiURL);\n  }\n  getPersona(personaId) {\n    let params = new HttpParams().set('incluirDirecciones', \"true\");\n    return this.http.get(this.apiURL + '/' + personaId, {\n      params: params\n    });\n  }\n  createPersona(persona) {\n    return this.http.post(this.apiURL, persona);\n  }\n  updatePersona(persona) {\n    return this.http.put(this.apiURL + \"/\" + persona.id.toString(), persona);\n  }\n  deletePersona(personaId) {\n    return this.http.delete(this.apiURL + \"/\" + personaId);\n  }\n}\nPersonasService.ɵfac = function PersonasService_Factory(t) {\n  return new (t || PersonasService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nPersonasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonasService,\n  factory: PersonasService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAQ7D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAFjE,WAAM,GAAG,IAAI,CAACA,OAAO,GAAG,UAAU;EAE4C;EAEtF;EACAC,WAAW;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC;EAC/C;EAEAC,UAAU,CAACC,SAAgB;IACzB,IAAIC,MAAM,GAAG,IAAIV,UAAU,EAAE,CAACW,GAAG,CAAC,oBAAoB,EAAC,MAAM,CAAC;IAC9D,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAW,IAAI,CAACC,MAAM,GAAG,GAAG,GAAGE,SAAS,EAAE;MAACC,MAAM,EAACA;IAAM,CAAC,CAAC;EAChF;EAEAE,aAAa,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAW,IAAI,CAACP,MAAM,EAACM,OAAO,CAAC;EACtD;EAEAE,aAAa,CAACF,OAAgB;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAW,IAAI,CAACT,MAAM,GAAC,GAAG,GAACM,OAAO,CAACI,EAAE,CAACC,QAAQ,EAAE,EAACL,OAAO,CAAC;EAC/E;EAEAM,aAAa,CAACV,SAAgB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACiB,MAAM,CAAW,IAAI,CAACb,MAAM,GAAC,GAAG,GAACE,SAAS,CAAC;EAC9D;;AAzBWR,eAAe;mBAAfA,eAAe,0CAGoB,UAAU;AAAA;AAH7CA,eAAe;SAAfA,eAAe;EAAAoB,SAAfpB,eAAe;EAAAqB,YAFd;AAAM","names":["HttpParams","PersonasService","constructor","http","baseUrl","getPersonas","get","apiURL","getPersona","personaId","params","set","createPersona","persona","post","updatePersona","put","id","toString","deletePersona","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\personas\\personas.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IPersona } from './IPersona';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonasService {\n  private apiURL = this.baseUrl + \"personas\"\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string ) { }\n\n  // Método para obtener personas\n  getPersonas(): Observable<IPersona[]> {\n    return this.http.get<IPersona[]>(this.apiURL);\n  }\n\n  getPersona(personaId:string):Observable<IPersona>{\n    let params = new HttpParams().set('incluirDirecciones',\"true\")\n    return this.http.get<IPersona>(this.apiURL + '/' + personaId, {params:params});\n  }\n\n  createPersona(persona:IPersona): Observable<IPersona>{\n    return this.http.post<IPersona>(this.apiURL,persona);\n  }\n\n  updatePersona(persona:IPersona):Observable<IPersona>{\n    return this.http.put<IPersona>(this.apiURL+\"/\"+persona.id.toString(),persona)\n  }\n\n  deletePersona(personaId:string):Observable<IPersona>{\n    return this.http.delete<IPersona>(this.apiURL+\"/\"+personaId)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}