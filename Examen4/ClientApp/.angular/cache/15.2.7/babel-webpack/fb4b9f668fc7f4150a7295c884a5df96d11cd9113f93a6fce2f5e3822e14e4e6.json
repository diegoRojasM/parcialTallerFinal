{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../personas.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PersonasFormComponent_span_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombre es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonasFormComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtemplate(1, PersonasFormComponent_span_9_span_1_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formGroup.get(\"nombre\").errors.required);\n  }\n}\nfunction PersonasFormComponent_span_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo Fecha Nacimiento es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonasFormComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtemplate(1, PersonasFormComponent_span_15_span_1_Template, 2, 0, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.formGroup.get(\"fechaNacimiento\").errors.required);\n  }\n}\nfunction PersonasFormComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 8)(2, \"label\", 18);\n    i0.ɵɵtext(3, \"Calle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 3);\n    i0.ɵɵelement(5, \"input\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 8)(7, \"label\", 18);\n    i0.ɵɵtext(8, \"Provincia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 3);\n    i0.ɵɵelement(10, \"input\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 21)(13, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function PersonasFormComponent_div_20_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r6 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removerDireccion(i_r6));\n    });\n    i0.ɵɵtext(14, \"Remover\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", \"calle\" + i_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"id\", \"calle\" + i_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"for\", \"provincia\" + i_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"id\", \"provincia\" + i_r6);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/personas\"];\n};\nexport class PersonasFormComponent {\n  constructor(fb, personaService, router, activatedRoute, datePipe) {\n    this.fb = fb;\n    this.personaService = personaService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.datePipe = datePipe;\n    this.modoEdicion = false;\n    this.direccionesABorrar = [];\n  }\n  ngOnInit() {\n    this.formGroup = this.fb.group({\n      nombre: '',\n      fechaNacimiento: '',\n      direcciones: this.fb.array([])\n    });\n    this.activatedRoute.params.subscribe(params => {\n      if (params['id'] === undefined) {\n        return;\n      }\n      this.modoEdicion = true;\n      this.personaId = params['id'];\n      this.personaService.getPersona(this.personaId.toString()).subscribe(persona => this.cargarFormulario(persona), error => console.error(error));\n    });\n  }\n  get direcciones() {\n    return this.formGroup.get('direcciones');\n  }\n  agregarDireccion() {\n    this.direcciones.push(this.construirDireccion());\n  }\n  construirDireccion() {\n    return this.fb.group({\n      id: 0,\n      calle: '',\n      provincia: '',\n      personaId: this.personaId || 0\n    });\n  }\n  removerDireccion(index) {\n    let direccionRemover = this.direcciones.at(index);\n    if (direccionRemover.controls['id'].value != '0') {\n      this.direccionesABorrar.push(direccionRemover.controls['id'].value);\n    }\n    this.direcciones.removeAt(index);\n  }\n  cargarFormulario(persona) {\n    const format = 'yyyy-MM-dd';\n    this.formGroup.patchValue({\n      nombre: persona.nombre,\n      fechaNacimiento: this.datePipe.transform(persona.fechaNacimiento, format)\n    });\n    const direccionesFormArray = this.fb.array(persona.direcciones.map(direccion => this.fb.group(direccion)));\n    this.formGroup.setControl('direcciones', direccionesFormArray);\n    // let direcciones = this.formGroup.controls['direcciones'] as FormArray;\n    // persona.direcciones.forEach(direccion => {\n    //   let direccionFG = this.construirDireccion();\n    //   direccionFG.patchValue(direccion);\n    //   direcciones.push(direccionFG);\n    // });\n  }\n\n  save() {\n    let persona = Object.assign({}, this.formGroup.value);\n    console.table(persona);\n    if (this.modoEdicion) {\n      persona.id = this.personaId;\n      this.personaService.updatePersona(persona).subscribe(() => this.onSaveSuccess(), error => console.error(error));\n    } else {\n      this.personaService.createPersona(persona).subscribe(() => this.onSaveSuccess(), error => console.error(error));\n    }\n  }\n  onSaveSuccess() {\n    this.router.navigate(['/personas']);\n  }\n}\nPersonasFormComponent.ɵfac = function PersonasFormComponent_Factory(t) {\n  return new (t || PersonasFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PersonasService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DatePipe));\n};\nPersonasFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PersonasFormComponent,\n  selectors: [[\"app-personas-form\"]],\n  features: [i0.ɵɵProvidersFeature([DatePipe] // Asegura que DatePipe esté disponible\n  )],\n  decls: 28,\n  vars: 14,\n  consts: [[\"novalidate\", \"\", 1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"nombreId\", 1, \"col-md-2\", \"control-label\"], [1, \"col-md-8\"], [\"id\", \"nombreId\", \"type\", \"text\", \"required\", \"\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"fechaNacimiento\", 1, \"col-md-2\", \"control-label\"], [\"id\", \"fechaNacimiento\", \"type\", \"date\", \"required\", \"\", \"formControlName\", \"fechaNacimiento\", 1, \"form-control\"], [1, \"form-group\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"formArrayName\", \"direcciones\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", \"col-md-offset-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", 3, \"routerLink\"], [1, \"help-block\"], [4, \"ngIf\"], [3, \"formGroupName\"], [1, \"col-md-2\", \"control-label\"], [\"type\", \"text\", \"formControlName\", \"calle\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"provincia\", 1, \"form-control\"], [1, \"col-md-10\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"pull-right\", 3, \"click\"]],\n  template: function PersonasFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PersonasFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(3, \"fieldset\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, PersonasFormComponent_span_9_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Fecha Nacimiento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3);\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵtemplate(15, PersonasFormComponent_span_15_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"a\", 9);\n      i0.ɵɵlistener(\"click\", function PersonasFormComponent_Template_a_click_17_listener() {\n        return ctx.agregarDireccion();\n      });\n      i0.ɵɵtext(18, \"Agregar Direcci\\u00F3n\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 10);\n      i0.ɵɵtemplate(20, PersonasFormComponent_div_20_Template, 15, 5, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 8)(22, \"div\", 12)(23, \"span\")(24, \"button\", 13);\n      i0.ɵɵtext(25, \" Salvar \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 14);\n      i0.ɵɵtext(27, \" Cancelar \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.modoEdicion ? \"Editar\" : \"Agregar\", \" Persona\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, (ctx.formGroup.get(\"nombre\").touched || ctx.formGroup.get(\"nombre\").dirty) && !ctx.formGroup.get(\"nombre\").valid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.formGroup.get(\"nombre\").touched || ctx.formGroup.get(\"nombre\").dirty) && ctx.formGroup.get(\"nombre\").errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, (ctx.formGroup.get(\"fechaNacimiento\").touched || ctx.formGroup.get(\"fechaNacimiento\").dirty) && !ctx.formGroup.get(\"fechaNacimiento\").valid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.formGroup.get(\"fechaNacimiento\").touched || ctx.formGroup.get(\"fechaNacimiento\").dirty) && ctx.formGroup.get(\"fechaNacimiento\").errors);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.direcciones.controls);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.formGroup.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c1));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["DatePipe","i0","PersonasFormComponent","constructor","fb","personaService","router","activatedRoute","datePipe","ngOnInit","formGroup","group","nombre","fechaNacimiento","direcciones","array","params","subscribe","undefined","modoEdicion","personaId","getPersona","toString","persona","cargarFormulario","error","console","get","agregarDireccion","push","construirDireccion","id","calle","provincia","removerDireccion","index","direccionRemover","at","controls","value","direccionesABorrar","removeAt","format","patchValue","transform","direccionesFormArray","map","direccion","setControl","save","Object","assign","table","updatePersona","onSaveSuccess","createPersona","navigate","selectors","features","ctx"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\personas\\personas-form\\personas-form.component.ts","C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\personas\\personas-form\\personas-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { IPersona } from '../IPersona';\nimport { PersonasService } from '../personas.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-personas-form',\n  templateUrl: './personas-form.component.html',\n  styleUrls: ['./personas-form.component.css'],\n  providers: [DatePipe] // Asegura que DatePipe esté disponible\n})\nexport class PersonasFormComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private personaService: PersonasService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private datePipe: DatePipe\n  ) {}\n\n  modoEdicion: boolean = false;\n  formGroup!: FormGroup;\n  personaId!: number;\n  direccionesABorrar: number[] = [];\n\n  ngOnInit() {\n    this.formGroup = this.fb.group({\n      nombre: '',\n      fechaNacimiento: '',\n      direcciones: this.fb.array([])\n    });\n\n    this.activatedRoute.params.subscribe(params => {\n      if (params['id'] === undefined) {\n        return;\n      }\n      this.modoEdicion = true;\n\n      this.personaId = params['id'];\n      this.personaService.getPersona(this.personaId.toString())\n        .subscribe(persona => this.cargarFormulario(persona),\n                   error => console.error(error));\n    });\n  }\n\n  get direcciones(): FormArray {\n    return this.formGroup.get('direcciones') as FormArray;\n  }\n\n  agregarDireccion() {\n    this.direcciones.push(this.construirDireccion());\n  }\n\n  construirDireccion() {\n    return this.fb.group({\n      id: 0,\n      calle: '',\n      provincia: '',\n      personaId: this.personaId || 0\n    });\n  }\n\n  removerDireccion(index: number) {\n    let direccionRemover = this.direcciones.at(index) as FormGroup;\n    if (direccionRemover.controls['id'].value != '0') {\n      this.direccionesABorrar.push(<number>direccionRemover.controls['id'].value);\n    }\n    this.direcciones.removeAt(index);\n  }\n\n  cargarFormulario(persona: IPersona) {\n    const format = 'yyyy-MM-dd';\n\n    this.formGroup.patchValue({\n      nombre: persona.nombre,\n      fechaNacimiento: this.datePipe.transform(persona.fechaNacimiento, format)\n    });\n\n    const direccionesFormArray = this.fb.array(\n      persona.direcciones.map(direccion => this.fb.group(direccion))\n    );\n    this.formGroup.setControl('direcciones', direccionesFormArray);\n    \n\n    // let direcciones = this.formGroup.controls['direcciones'] as FormArray;\n    // persona.direcciones.forEach(direccion => {\n    //   let direccionFG = this.construirDireccion();\n    //   direccionFG.patchValue(direccion);\n    //   direcciones.push(direccionFG);\n    // });\n  }\n\n  save() {\n    let persona: IPersona = Object.assign({}, this.formGroup.value);\n    console.table(persona);\n\n    if (this.modoEdicion) {\n      persona.id = this.personaId;\n\n      this.personaService.updatePersona(persona)\n        .subscribe(() => this.onSaveSuccess(),\n                   error => console.error(error));\n    } else {\n      this.personaService.createPersona(persona)\n        .subscribe(() => this.onSaveSuccess(),\n                   error => console.error(error));\n    }\n  }\n\n  onSaveSuccess() {\n    this.router.navigate(['/personas']);\n  }\n}\n","<h1>{{modoEdicion ? 'Editar' : 'Agregar'}} Persona</h1>\n<form class=\"form-horizontal\" novalidate\n      (ngSubmit)=\"save()\" [formGroup]=\"formGroup\">\n  <fieldset>\n\n    <div class=\"form-group\"\n         [ngClass]=\"{'has-error': (formGroup.get('nombre')!.touched || formGroup.get('nombre')!.dirty) && !formGroup.get('nombre')!.valid }\">\n      <label class=\"col-md-2 control-label\"\n             for=\"nombreId\">Nombre</label>\n\n      <div class=\"col-md-8\">\n        <input class=\"form-control\"\n               id=\"nombreId\"\n               type=\"text\"\n               required\n               formControlName=\"nombre\" />\n        <span class=\"help-block\" *ngIf=\"(formGroup.get('nombre')!.touched || formGroup.get('nombre')!.dirty) && formGroup.get('nombre')!.errors\">\n          <span *ngIf=\"formGroup.get('nombre')!.errors!.required\">\n            El campo nombre es requerido\n          </span>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"form-group\"\n         [ngClass]=\"{'has-error': (formGroup.get('fechaNacimiento')!.touched || formGroup.get('fechaNacimiento')!.dirty) && !formGroup.get('fechaNacimiento')!.valid }\">\n      <label class=\"col-md-2 control-label\"\n             for=\"fechaNacimiento\">Fecha Nacimiento</label>\n\n      <div class=\"col-md-8\">\n        <input class=\"form-control\"\n               id=\"fechaNacimiento\"\n               type=\"date\"\n               required\n               formControlName=\"fechaNacimiento\" />\n        <span class=\"help-block\" *ngIf=\"(formGroup.get('fechaNacimiento')!.touched || formGroup.get('fechaNacimiento')!.dirty) && formGroup.get('fechaNacimiento')!.errors\">\n          <span *ngIf=\"formGroup.get('fechaNacimiento')!.errors!.required\">\n            El campo Fecha Nacimiento es requerido\n          </span>\n        </span>\n      </div>\n    </div>\n\n\n\n\n        \n        <div class=\"form-group\">\n          <a class=\"btn btn-primary\" (click)=\"agregarDireccion()\">Agregar Dirección</a>\n        </div>\n    \n        <div formArrayName=\"direcciones\">\n          <div *ngFor=\"let direccion of direcciones.controls; let i = index\" [formGroupName]=\"i\">\n            <div class=\"form-group\">\n              <label class=\"col-md-2 control-label\" [attr.for]=\"'calle' + i\">Calle</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\" [attr.id]=\"'calle' + i\" type=\"text\" formControlName=\"calle\" />\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"col-md-2 control-label\" [attr.for]=\"'provincia' + i\">Provincia</label>\n              <div class=\"col-md-8\">\n                <input class=\"form-control\" [attr.id]=\"'provincia' + i\" type=\"text\" formControlName=\"provincia\" />\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <div class=\"col-md-10\">\n                <button type=\"button\" class=\"btn btn-danger pull-right\" (click)=\"removerDireccion(i)\">Remover</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n\n    \n\n\n\n\n    <div class=\"form-group\">\n      <div class=\"col-md-4 col-md-offset-2\">\n        <span>\n          <button class=\"btn btn-primary\"\n                  type=\"submit\"\n                  [disabled]=\"!formGroup.valid\">\n            Salvar\n          </button>\n          <button class=\"btn\"\n                  type=\"button\"\n                  [routerLink]='[\"/personas\"]'>\n            Cancelar\n          </button>\n        </span>\n\n      </div>\n\n    </div>\n  </fieldset>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}