{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El Email es requerido.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" El Email debe tener un formato valido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginComponent_div_5_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, LoginComponent_div_5_div_2_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El Password es requerido.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(http, baseUrl, formBuilder, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.usuarios = [];\n    this.loginForm = this.formBuilder.group({\n      email: ['diego@gmail.com', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n    this.http.get(this.baseUrl + \"eventos\").subscribe(result => {\n      this.usuarios = result;\n      console.log(result);\n      console.log(this.usuarios);\n    }, error => console.log(error));\n  }\n  get email() {\n    return this.loginForm.controls.email;\n  }\n  get password() {\n    return this.loginForm.controls.password;\n  }\n  login() {\n    if (this.loginForm.valid) {\n      console.log(\"Llamar al servicio de login\");\n      this.router.navigateByUrl(\"/inicio\");\n      this.loginForm.reset();\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"class\", \"alert text-danger\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"alert\", \"text-danger\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_11_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(12, \"Iniciar Sesion\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;;ICO5CC,2BAAwC;IAAAA,sCAAsB;IAAAA,iBAAM;;;;;IACpEA,2BAAqC;IACjCA,wDACJ;IAAAA,iBAAM;;;;;IANVA,8BAEK;IACDA,qEAAoE;IACpEA,qEAEM;IAEZA,iBAAM;;;;IALMA,eAAgC;IAAhCA,2FAAgC;IAChCA,eAA6B;IAA7BA,wFAA6B;;;;;IAazCA,2BAA2C;IAAAA,yCAAyB;IAAAA,iBAAM;;;;;IAH1EA,8BAEC;IACDA,sEAA0E;IACxEA,iBAAM;;;;IADFA,eAAmC;IAAnCA,iGAAmC;;;ADT/C,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAgB,EAA8BC,OAAe,EAAUC,WAAwB,EAAUC,MAAa;IAAtH,SAAI,GAAJH,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAAkB,gBAAW,GAAXC,WAAW;IAAuB,WAAM,GAANC,MAAM;IAN5H,aAAQ,GAAY,EAAE;IAE7B,cAAS,GAAC,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC7BC,KAAK,EAAC,CAAC,iBAAiB,EAAC,CAACT,UAAU,CAACU,QAAQ,EAACV,UAAU,CAACS,KAAK,CAAC,CAAC;MAChEE,QAAQ,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACU,QAAQ,CAAC;KACnC,CAAC;IAEF,IAAI,CAACN,IAAI,CAACQ,GAAG,CAAa,IAAI,CAACP,OAAO,GAAG,SAAS,CAAC,CAACQ,SAAS,CAACC,MAAM,IAAE;MACpE,IAAI,CAACC,QAAQ,GAAGD,MAAM;MACtBE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC5B,CAAC,EAACG,KAAK,IAAGF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;EAC/B;EAEA,IAAIT,KAAK;IACP,OAAO,IAAI,CAACU,SAAS,CAACC,QAAQ,CAACX,KAAK;EACtC;EACA,IAAIE,QAAQ;IACV,OAAO,IAAI,CAACQ,SAAS,CAACC,QAAQ,CAACT,QAAQ;EACzC;EAEAU,KAAK;IACH,IAAG,IAAI,CAACF,SAAS,CAACG,KAAK,EAAC;MACtBN,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,IAAI,CAACV,MAAM,CAACgB,aAAa,CAAC,SAAS,CAAC;MACpC,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;KACvB,MACG;MACF,IAAI,CAACL,SAAS,CAACM,gBAAgB,EAAE;;EAErC;;AA/BWvB,cAAc;mBAAdA,cAAc,4DAOqB,UAAU;AAAA;AAP7CA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb3B7B,+BAA+B;MAE0BA,qBAAK;MAAAA,iBAAQ;MAChEA,2BAAsH;MAEpHA,+DAQI;MACRA,iBAAM;MACNA,8BAAkB;MACsCA,wBAAQ;MAAAA,iBAAQ;MACtEA,2BAAkG;MAElGA,iEAIQ;MACVA,iBAAM;MAENA,kCAAgE;MAA1CA;QAAA,OAAS8B,WAAO;MAAA,EAAC;MAAyB9B,+BAAc;MAAAA,iBAAS;;;MA1BrFA,yCAAuB;MAKfA,eAAqD;MAArDA,kFAAqD;MAcvDA,eAA8D;MAA9DA,2FAA8D","names":["Validators","i0","LoginComponent","constructor","http","baseUrl","formBuilder","router","group","email","required","password","get","subscribe","result","usuarios","console","log","error","loginForm","controls","login","valid","navigateByUrl","reset","markAllAsTouched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUsuario } from './IUsuario';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public usuarios:IUsuario[]=[];\n\n  loginForm=this.formBuilder.group({\n      email:['diego@gmail.com',[Validators.required,Validators.email]],\n      password:['',[Validators.required]]\n    })\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string ,private formBuilder: FormBuilder, private router:Router){\n    this.http.get<IUsuario[]>(this.baseUrl + \"eventos\").subscribe(result=>{\n      this.usuarios = result;\n      console.log(result);\n      console.log(this.usuarios)\n    },error=> console.log(error));\n  };\n\n  get email(){\n    return this.loginForm.controls.email;\n  }\n  get password(){\n    return this.loginForm.controls.password;\n  }\n\n  login(){\n    if(this.loginForm.valid){\n      console.log(\"Llamar al servicio de login\")\n      this.router.navigateByUrl(\"/inicio\");\n      this.loginForm.reset();\n    }\n    else{\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n  servLogin\n}\n\n","<form [formGroup]=\"loginForm\" >\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n      <input formControlName=\"email\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n      \n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n            class=\"alert text-danger\"\n            >\n            <div *ngIf=\"email.errors?.['required']\">El Email es requerido.</div>\n            <div *ngIf=\"email.errors?.['email']\">\n                El Email debe tener un formato valido.\n            </div>\n\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n      class=\"alert text-danger\"\n      >\n      <div *ngIf=\"password.errors?.['required']\">El Password es requerido.</div>\n        </div>\n    </div>\n\n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Iniciar Sesion</button>\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}