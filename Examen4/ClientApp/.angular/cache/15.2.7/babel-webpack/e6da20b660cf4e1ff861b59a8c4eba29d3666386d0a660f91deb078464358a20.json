{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../personas.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PersonasFormComponent_span_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombre es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonasFormComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, PersonasFormComponent_span_9_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formGroup.get(\"nombre\").errors.required);\n  }\n}\nfunction PersonasFormComponent_span_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo Fecha Nacimiento es requerido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonasFormComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, PersonasFormComponent_span_15_span_1_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.formGroup.get(\"fechaNacimiento\").errors.required);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/personas\"];\n};\nexport class PersonasFormComponent {\n  constructor(fb, personaService, router, activatedRoute, datePipe) {\n    this.fb = fb;\n    this.personaService = personaService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.datePipe = datePipe;\n    this.modoEdicion = false;\n  }\n  ngOnInit() {\n    this.formGroup = this.fb.group({\n      nombre: '',\n      fechaNacimiento: ''\n    });\n    this.activatedRoute.params.subscribe(params => {\n      if (params['id'] === undefined) {\n        return;\n      }\n      this.modoEdicion = true;\n      this.personaId = params['id'];\n      // Necesito traer los valores de la persona por el id\n      this.personaService.getPersona(this.personaId.toString()).subscribe(persona => this.cargarFormulario(persona), error => console.error(error));\n    });\n  }\n  cargarFormulario(persona) {\n    const format = 'yyyy-MM-dd';\n    this.formGroup.patchValue({\n      nombre: persona.nombre,\n      fechaNacimiento: this.datePipe.transform(persona.fechaNacimiento, format) // Formato correcto para fecha\n    });\n  }\n\n  save() {\n    let persona = Object.assign({}, this.formGroup.value);\n    console.table(persona);\n    IF;\n    this.personaService.createPersona(persona).subscribe(persona => this.onSaveSuccess(), error => console.error(error));\n  }\n  onSaveSuccess() {\n    this.router.navigate(['/personas']);\n  }\n}\nPersonasFormComponent.ɵfac = function PersonasFormComponent_Factory(t) {\n  return new (t || PersonasFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PersonasService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DatePipe));\n};\nPersonasFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PersonasFormComponent,\n  selectors: [[\"app-personas-form\"]],\n  decls: 23,\n  vars: 13,\n  consts: [[\"novalidate\", \"\", 1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"nombreId\", 1, \"col-md-2\", \"control-label\"], [1, \"col-md-8\"], [\"id\", \"nombreId\", \"type\", \"text\", \"required\", \"\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"fechaNacimiento\", 1, \"col-md-2\", \"control-label\"], [\"id\", \"fechaNacimiento\", \"type\", \"date\", \"required\", \"\", \"formControlName\", \"fechaNacimiento\", 1, \"form-control\"], [1, \"form-group\"], [1, \"col-md-4\", \"col-md-offset-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", 3, \"routerLink\"], [1, \"help-block\"], [4, \"ngIf\"]],\n  template: function PersonasFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PersonasFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(3, \"fieldset\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, PersonasFormComponent_span_9_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 6);\n      i0.ɵɵtext(12, \"Fecha Nacimiento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3);\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵtemplate(15, PersonasFormComponent_span_15_Template, 2, 1, \"span\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"div\", 9)(18, \"span\")(19, \"button\", 10);\n      i0.ɵɵtext(20, \" Salvar \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵtext(22, \" Cancelar \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.modoEdicion ? \"Editar\" : \"Agregar\", \" Persona\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (ctx.formGroup.get(\"nombre\").touched || ctx.formGroup.get(\"nombre\").dirty) && !ctx.formGroup.get(\"nombre\").valid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.formGroup.get(\"nombre\").touched || ctx.formGroup.get(\"nombre\").dirty) && ctx.formGroup.get(\"nombre\").errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (ctx.formGroup.get(\"fechaNacimiento\").touched || ctx.formGroup.get(\"fechaNacimiento\").dirty) && !ctx.formGroup.get(\"fechaNacimiento\").valid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.formGroup.get(\"fechaNacimiento\").touched || ctx.formGroup.get(\"fechaNacimiento\").dirty) && ctx.formGroup.get(\"fechaNacimiento\").errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.formGroup.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(12, _c1));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","PersonasFormComponent","constructor","fb","personaService","router","activatedRoute","datePipe","ngOnInit","formGroup","group","nombre","fechaNacimiento","params","subscribe","undefined","modoEdicion","personaId","getPersona","toString","persona","cargarFormulario","error","console","format","patchValue","transform","save","Object","assign","value","table","IF","createPersona","onSaveSuccess","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\personas\\personas-form\\personas-form.component.html","C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\personas\\personas-form\\personas-form.component.ts"],"sourcesContent":["<h1>{{modoEdicion ? 'Editar' : 'Agregar'}} Persona</h1>\n<form class=\"form-horizontal\" novalidate\n      (ngSubmit)=\"save()\" [formGroup]=\"formGroup\">\n  <fieldset>\n\n    <div class=\"form-group\"\n         [ngClass]=\"{'has-error': (formGroup.get('nombre')!.touched || formGroup.get('nombre')!.dirty) && !formGroup.get('nombre')!.valid }\">\n      <label class=\"col-md-2 control-label\"\n             for=\"nombreId\">Nombre</label>\n\n      <div class=\"col-md-8\">\n        <input class=\"form-control\"\n               id=\"nombreId\"\n               type=\"text\"\n               required\n               formControlName=\"nombre\" />\n        <span class=\"help-block\" *ngIf=\"(formGroup.get('nombre')!.touched || formGroup.get('nombre')!.dirty) && formGroup.get('nombre')!.errors\">\n          <span *ngIf=\"formGroup.get('nombre')!.errors!.required\">\n            El campo nombre es requerido\n          </span>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"form-group\"\n         [ngClass]=\"{'has-error': (formGroup.get('fechaNacimiento')!.touched || formGroup.get('fechaNacimiento')!.dirty) && !formGroup.get('fechaNacimiento')!.valid }\">\n      <label class=\"col-md-2 control-label\"\n             for=\"fechaNacimiento\">Fecha Nacimiento</label>\n\n      <div class=\"col-md-8\">\n        <input class=\"form-control\"\n               id=\"fechaNacimiento\"\n               type=\"date\"\n               required\n               formControlName=\"fechaNacimiento\" />\n        <span class=\"help-block\" *ngIf=\"(formGroup.get('fechaNacimiento')!.touched || formGroup.get('fechaNacimiento')!.dirty) && formGroup.get('fechaNacimiento')!.errors\">\n          <span *ngIf=\"formGroup.get('fechaNacimiento')!.errors!.required\">\n            El campo Fecha Nacimiento es requerido\n          </span>\n        </span>\n      </div>\n    </div>\n\n\n    <div class=\"form-group\">\n      <div class=\"col-md-4 col-md-offset-2\">\n        <span>\n          <button class=\"btn btn-primary\"\n                  type=\"submit\"\n                  [disabled]=\"!formGroup.valid\">\n            Salvar\n          </button>\n          <button class=\"btn\"\n                  type=\"button\"\n                  [routerLink]='[\"/personas\"]'>\n            Cancelar\n          </button>\n        </span>\n\n      </div>\n\n    </div>\n  </fieldset>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { IPersona } from '../IPersona';\nimport { PersonasService } from '../personas.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-personas-form',\n  templateUrl: './personas-form.component.html',\n  styleUrls: ['./personas-form.component.css']\n})\nexport class PersonasFormComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private personaService: PersonasService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private datePipe: DatePipe\n  ) {}\n\n  modoEdicion: boolean = false;\n  formGroup!: FormGroup;\n  personaId!: number;\n\n  ngOnInit() {\n    this.formGroup = this.fb.group({\n      nombre: '',\n      fechaNacimiento: ''\n    });\n\n    this.activatedRoute.params.subscribe(params => {\n      if (params['id'] === undefined) {\n        return;\n      }\n      this.modoEdicion = true;\n\n      this.personaId = params['id'];\n      // Necesito traer los valores de la persona por el id\n      this.personaService.getPersona(this.personaId.toString())\n        .subscribe(persona => this.cargarFormulario(persona),\n                   error => console.error(error));\n    });\n  }\n\n  cargarFormulario(persona: IPersona) {\n    const format = 'yyyy-MM-dd'; \n\n    this.formGroup.patchValue({\n      nombre: persona.nombre,\n      fechaNacimiento: this.datePipe.transform(persona.fechaNacimiento, format) // Formato correcto para fecha\n    });\n  }\n\n  save() {\n    let persona: IPersona = Object.assign({}, this.formGroup.value);\n    console.table(persona);\n\n    IF\n\n    this.personaService.createPersona(persona)\n      .subscribe(\n        persona => this.onSaveSuccess(),\n        error => console.error(error)\n      );\n  }\n\n  onSaveSuccess() {\n    this.router.navigate(['/personas']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}