{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventosService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.apiURL = this.baseUrl + \"eventos\";\n  }\n  // Método para obtener personas\n  getEventos() {\n    return this.http.get(this.apiURL);\n  }\n  getEvento(eventoId) {\n    return this.http.get(this.apiURL + '/' + eventoId);\n  }\n  createEvento(evento) {\n    return this.http.post(this.apiURL, evento);\n  }\n}\nEventosService.ɵfac = function EventosService_Factory(t) {\n  return new (t || EventosService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nEventosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventosService,\n  factory: EventosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAFjE,WAAM,GAAG,IAAI,CAACA,OAAO,GAAG,SAAS;EAE6C;EAEtF;EACAC,UAAU;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAC,SAAS,CAACC,QAAgB;IACxB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAU,IAAI,CAACC,MAAM,GAAG,GAAG,GAAGE,QAAQ,CAAC;EAC7D;EAEAC,YAAY,CAACC,MAAe;IAC1B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,IAAI,CAACL,MAAM,EAAEI,MAAM,CAAC;EACrD;;AAhBWV,cAAc;mBAAdA,cAAc,0CAGqB,UAAU;AAAA;AAH7CA,cAAc;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;EAAAa,YAFb;AAAM","names":["EventosService","constructor","http","baseUrl","getEventos","get","apiURL","getEvento","eventoId","createEvento","evento","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\eventos\\eventos.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { IEvento } from './Evento';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventosService {\r\n  private apiURL = this.baseUrl + \"eventos\"\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string ) { }\r\n\r\n  // Método para obtener personas\r\n  getEventos(): Observable<IEvento[]> {\r\n    return this.http.get<IEvento[]>(this.apiURL);\r\n  }\r\n\r\n  getEvento(eventoId: string): Observable<IEvento>{\r\n    return this.http.get<IEvento>(this.apiURL + '/' + eventoId)\r\n  }\r\n\r\n  createEvento(evento: IEvento):Observable<IEvento>{\r\n    return this.http.post<IEvento>(this.apiURL, evento)\r\n  }\r\n\r\n  update\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}