{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(http, baseUrl, formBuilder, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.usuarios = [];\n    this.loginForm = this.formBuilder.group({\n      email: ['diego@gmail.com', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  get email() {\n    return this.loginForm.controls.email;\n  }\n  get password() {\n    return this.loginForm.controls.password;\n  }\n  login() {\n    if (this.loginForm.valid) {\n      console.log(\"Llamar al servicio de login\");\n      this.http.get(this.baseUrl + \"eventos\").subscribe({\n        next: result => {\n          this.usuarios = result;\n          console.log(result);\n          console.log(this.usuarios);\n        },\n        error: error => console.log(error),\n        complete: () => {\n          console.info(\"login completo\");\n          //this.login();\n          this.router.navigateByUrl(\"/inicio\");\n          this.loginForm.reset();\n        }\n      });\n    } else {\n      this.loginForm.markAllAsTouched();\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n}), __param(1, Inject('BASE_URL'))], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAAsBC,UAAU,QAAQ,gBAAgB;AAajD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOvBC,YACUC,IAAgB,EACIC,OAAe,EACnCC,WAAwB,EACxBC,MAAc;IAHd,SAAI,GAAJH,IAAI;IACgB,YAAO,GAAPC,OAAO;IAC3B,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAVX,aAAQ,GAAY,EAAE;IAE7B,cAAS,GAAC,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC7BC,KAAK,EAAC,CAAC,iBAAiB,EAAC,CAACR,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACQ,KAAK,CAAC,CAAC;MAChEE,QAAQ,EAAC,CAAC,EAAE,EAAC,CAACV,UAAU,CAACS,QAAQ,CAAC;KACnC,CAAC;EAQF;EAGF,IAAID,KAAK;IACP,OAAO,IAAI,CAACG,SAAS,CAACC,QAAQ,CAACJ,KAAK;EACtC;EACA,IAAIE,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS,CAACC,QAAQ,CAACF,QAAQ;EACzC;EAEAG,KAAK;IACH,IAAG,IAAI,CAACF,SAAS,CAACG,KAAK,EAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,IAAI,CAACb,IAAI,CAACc,GAAG,CAAa,IAAI,CAACb,OAAO,GAAG,SAAS,CAAC,CAACc,SAAS,CAAC;QAC5DC,IAAI,EAAGC,MAAM,IAAI;UACf,IAAI,CAACC,QAAQ,GAAGD,MAAM;UACtBL,OAAO,CAACC,GAAG,CAACI,MAAM,CAAC;UACnBL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,QAAQ,CAAC;QAC5B,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAKP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;QACpCC,QAAQ,EAAE,MAAK;UACbR,OAAO,CAACS,IAAI,CAAC,gBAAgB,CAAC;UAC9B;UACA,IAAI,CAAClB,MAAM,CAACmB,aAAa,CAAC,SAAS,CAAC;UACpC,IAAI,CAACd,SAAS,CAACe,KAAK,EAAE;QACxB;OACD,CAAC;KAEH,MACG;MACF,IAAI,CAACf,SAAS,CAACgB,gBAAgB,EAAE;;EAErC;CAGD;AAjDY1B,cAAc,eAL1BH,SAAS,CAAC;EACT8B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,EAUKC,iBAAM,CAAC,UAAU,CAAC,IATZ9B,cAAc,CAiD1B;SAjDYA,cAAc","names":["Component","Inject","Validators","LoginComponent","constructor","http","baseUrl","formBuilder","router","group","email","required","password","loginForm","controls","login","valid","console","log","get","subscribe","next","result","usuarios","error","complete","info","navigateByUrl","reset","markAllAsTouched","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\Diego\\Desktop\\ParcialFinalTaller\\parcialTallerFinal\\Examen4\\ClientApp\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUsuario } from './IUsuario';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public usuarios:IUsuario[]=[];\n\n  loginForm=this.formBuilder.group({\n      email:['diego@gmail.com',[Validators.required,Validators.email]],\n      password:['',[Validators.required]]\n    })\n    constructor(\n      private http: HttpClient, \n      @Inject('BASE_URL') private baseUrl: string,\n      private formBuilder: FormBuilder, \n      private router: Router\n    ) {\n\n    }\n    \n\n  get email(){\n    return this.loginForm.controls.email;\n  }\n  get password(){\n    return this.loginForm.controls.password;\n  }\n\n  login(){\n    if(this.loginForm.valid){\n      console.log(\"Llamar al servicio de login\")\n      this.http.get<IUsuario[]>(this.baseUrl + \"eventos\").subscribe({\n        next: (result) => {\n          this.usuarios = result;\n          console.log(result);\n          console.log(this.usuarios);\n        },\n        error: (error) => console.log(error),\n        complete: () => {\n          console.info(\"login completo\");\n          //this.login();\n          this.router.navigateByUrl(\"/inicio\");\n          this.loginForm.reset();\n        }\n      });\n\n    }\n    else{\n      this.loginForm.markAllAsTouched();\n    }\n  }\n\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}